<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:graniteds="http://www.graniteds.org/config"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
						http://www.springframework.org/schema/context
					    http://www.springframework.org/schema/context/spring-context-4.1.xsd
					    http://www.graniteds.org/config
					    http://www.graniteds.org/public/dtd/3.0.0/granite-config-3.0.xsd">

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />
        <!-- override these for application-specific URLs if you like:
        <property name="loginUrl" value="/login.jsp"/>
        <property name="successUrl" value="/home.jsp"/>
        <property name="unauthorizedUrl" value="/unauthorized.jsp"/>
        -->
        <property name="filterChainDefinitions">
            <value>
                # apply amf auth filter:
                #/messagebroker/** = authcBlazeDS
                # some example chain definitions:
                #/admin/** = authc, roles[admin]
                #/docs/** = authc, perms[document:read]
                /v1/user/** = authc, roles[user]
                /v1/anon/** = anon
            </value>
        </property>
    </bean>

    <!-- SecurityManager related bean -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="sessionManager" ref="sessionManager"/>
        <property name="realm" ref="jdbcRealm"/>
    </bean>

    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionListeners">
            <list>
                <bean id="sessionListener" class="com.seer.security.MySessionListener" />
            </list>
        </property>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <!-- 1 hour session timeout 		-->
        <property name="globalSessionTimeout" value="172800000"/>
        <property name="sessionValidationInterval" value="60000"/>
    </bean>

    <bean id="passwordService" class="com.seer.security.shiro.BCryptPasswordService"/>
    <bean id="passwordMatcher" class="org.apache.shiro.authc.credential.PasswordMatcher">
        <property name="passwordService" ref="passwordService"/>
    </bean>
    <bean id="bCryptRealm" class="com.seer.security.shiro.BCryptRealm">
        <property name="credentialsMatcher" ref="passwordMatcher"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="authenticationQuery" value="SELECT password FROM user_profile where username = ?"/>
    </bean>

    <bean id="jdbcRealm" class="org.apache.shiro.realm.jdbc.JdbcRealm">
        <property name="dataSource" ref="dataSource"/>
        <property name="authenticationQuery" value="SELECT plain_password FROM user_profile where username = ?"/>
    </bean>

    <!-- TODO: Change to EnterpriseCacheSessionDAO -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO"/>

    <!-- This scheduler will not be needed with enterprise cache. -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
        <!-- 1 hour session orphan cleanup period. 	-->
        <property name="interval" value="172800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

    <bean name="adminService" id="adminService" class="com.seer.services.AdminService">
        <constructor-arg ref="dataSource" />
    </bean>

    <bean name="seerService" id="seerService" class="com.seer.services.SeerService">
        <constructor-arg ref="dataSource" />
    </bean>

    <bean name="sessionService" id="sessionService" class="com.seer.services.SessionService">
        <constructor-arg ref="dataSource" />
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url" value="jdbc:postgresql://localhost:5432/seer" />
        <property name="username" value="postgres" />
        <property name="password" value="qCkLNNVX56" />
    </bean>
</beans>